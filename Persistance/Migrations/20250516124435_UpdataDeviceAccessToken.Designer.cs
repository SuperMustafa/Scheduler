// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance.Data;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(SchedulerDbContext))]
    [Migration("20250516124435_UpdataDeviceAccessToken")]
    partial class UpdataDeviceAccessToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Building A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Building B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Building D"
                        });
                });

            modelBuilder.Entity("Domain.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessToken = "RUa54OFG7cl5kATAi54Q",
                            BuildingId = 1,
                            UnitName = "AC101",
                            UnitType = "AirConditioner"
                        },
                        new
                        {
                            Id = 2,
                            AccessToken = "DEVICE_TOKEN_2",
                            BuildingId = 2,
                            UnitName = "AC102",
                            UnitType = "AirConditioner"
                        },
                        new
                        {
                            Id = 3,
                            AccessToken = "DEVICE_TOKEN_3",
                            BuildingId = 3,
                            UnitName = "AC103",
                            UnitType = "AirConditioner"
                        });
                });

            modelBuilder.Entity("Domain.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ScheduleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuildingId = 1,
                            CreatedAt = new DateTime(2025, 5, 16, 15, 44, 35, 426, DateTimeKind.Local).AddTicks(919),
                            EndTime = new TimeSpan(0, 12, 0, 0, 0),
                            IsActive = true,
                            ScheduleName = "Morning Cooling",
                            SelectedDays = "Monday,Wednesday,Friday",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("Domain.Models.ScheduleDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeviceId = 1,
                            ScheduleId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeviceId = 2,
                            ScheduleId = 1
                        });
                });

            modelBuilder.Entity("Domain.Models.ScheduleDeviceAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributeKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleDeviceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleDeviceId");

                    b.ToTable("ScheduleDeviceAttributes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttributeKey = "temperature",
                            AttributeValue = "22",
                            ScheduleDeviceId = 1
                        },
                        new
                        {
                            Id = 2,
                            AttributeKey = "fanSpeed",
                            AttributeValue = "Medium",
                            ScheduleDeviceId = 1
                        },
                        new
                        {
                            Id = 3,
                            AttributeKey = "temperature",
                            AttributeValue = "24",
                            ScheduleDeviceId = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.ScheduleExecutionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributesSent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduleExecutionLogs");
                });

            modelBuilder.Entity("Domain.Models.Device", b =>
                {
                    b.HasOne("Domain.Models.Building", "Building")
                        .WithMany("Devices")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Domain.Models.Schedule", b =>
                {
                    b.HasOne("Domain.Models.Building", "Building")
                        .WithMany("Schedules")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("Domain.Models.ScheduleDevice", b =>
                {
                    b.HasOne("Domain.Models.Device", "Device")
                        .WithMany("ScheduleDevices")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Models.Schedule", "Schedule")
                        .WithMany("ScheduleDevices")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Domain.Models.ScheduleDeviceAttribute", b =>
                {
                    b.HasOne("Domain.Models.ScheduleDevice", "ScheduleDevice")
                        .WithMany("Attributes")
                        .HasForeignKey("ScheduleDeviceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ScheduleDevice");
                });

            modelBuilder.Entity("Domain.Models.ScheduleExecutionLog", b =>
                {
                    b.HasOne("Domain.Models.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Domain.Models.Building", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Domain.Models.Device", b =>
                {
                    b.Navigation("ScheduleDevices");
                });

            modelBuilder.Entity("Domain.Models.Schedule", b =>
                {
                    b.Navigation("ScheduleDevices");
                });

            modelBuilder.Entity("Domain.Models.ScheduleDevice", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
